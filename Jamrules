# Jamrules for the treemap++ project

ALL_LOCATE_TARGET = $(DOT) ;
HAVE_GC = 1 ;
# HAVE_STLPORT = 1 ;

if $(UNIX) || "gcc" in $(CC)
{
  LIBPREFIX ?= lib ;
  USELIB ?= -l ;
# Where all the required packages are

LIB_EXPAT =  -lexpat ;
if $(HAVE_GC)
{
	LIB_GC = -lgc ;
	LINKLIBS += $(LIB_GC) ;
}

LIB_ZLIB = -lz ;
LINKLIBS += $(LIB_ZLIB) ;

LIB_PNG = -lpng ;
LINKLIBS += $(LIB_PNG) ;

DIR_FT = /usr/X11R6 ;
HDRS_FT = $(DIR_FT)/include/freetype2 ;
LIB_FT = -L $(DIR_FT)/lib -lfreetype ;

HDRS += $(HDRS_FT) ;
HDRS += . ;

LINKLIBS += $(LIB_FT) ;

LIB_GLUT = -lglut32 -lglu32 -lopengl32 ;
LINKLIBS += $(LIB_GLUT) ;

}
else
{
  LIBPREFIX ?= "" ;
  LINKLIBS = "" ;

REQS_DIR = $(DOT)/.. ;
HDRS += $(REQS_DIR)/include ;
HDRS += $(DOT) ;

LIB_EXPAT = $(REQS_DIR)/lib/expat.lib ;
HDRS += $(HDRS_EXPAT) ;
LINKLIBS += $(LIB_EXPAT) ;

#NVIDIA_DIR = "\"c:/Program\ Files/nvidia\ corporation/NVIDIA\ OpenGL\ SDK\"" ;
#DIR_GLUT = $(NVIDIA_DIR)/include/glh ;
#LIB_GLUT = $(NVIDIA_DIR)/lib/Debug/glut32.lib ;
#LIB_GLUT = $(REQS_DIR)/lib/glut32.lib ;
#HDRS_GLUT = $(DIR_GLUT) ;

#HDRS += $(HDRS_GLUT) ;

if $(HAVE_GC)
{
	# Where GC is located
	C++FLAGS += -DUSE_GC=1 ;
	DIR_GC = $(REQS_DIR)/gc6.0 ;
	LIB_GC = $(REQS_DIR)/lib/gc.lib ;
	HDRS += $(HDRS_GC) ;
	LINKLIBS += $(LIB_GC) ;
}

# Where ZLIB is located
DIR_ZLIB = $(REQS_DIR)/lib ;
HDRS_ZLIB = $(DIR_ZLIB) ;
LIB_ZLIB = $(DIR_ZLIB)/$(LIBPREFIX)zlib$(SUFLIB) ;

HDRS += $(HDRS_ZLIB) ;
LINKLIBS += $(LIB_ZLIB) ;

# Where PNG is located
DIR_PNG = $(REQS_DIR)/lib ;
HDRS_PNG = $(DIR_PNG) ;
LIB_PNG = $(DIR_PNG)/libpng$(SUFLIB) ;

HDRS += $(HDRS_PNG) ;
LINKLIBS += $(LIB_PNG) ;

# Where FreeType is located
DIR_FT = $(REQS_DIR)/freetype ;
LIB_FT = $(DIR_FT)/$(LIBPREFIX)freetype$(SUFLIB) ;

HDRS += $(HDRS_FT) ;
LINKLIBS += $(LIB_FT) ;

LIB_GLUT = glut32.lib glu32.lib opengl32.lib gdi32.lib user32.lib ;

LINKLIBS += $(LIB_GLUT) ;

}


# Finally, all the Lite and Tree libraries are required
NEEDLIBS += liblite$(SUFLIB) libtree$(SUFLIB) ;

if "cl" in $(C++) || "icl" in $(C++)
{
  C++FLAGS += -MT -GX -GR -W3 ;
 C++FLAGS += -Zi ; # -GZ
# LINKFLAGS += /MT /link /PROFILE ;
#  LINKFLAGS += /MTd -Zi ; #  -GZ
   LINKFLAGS += /MT ;
# OPTIM = ;
  OPTIM = -Ox -DNDEBUG ;
  LINK = cl /nologo ;

  actions Link bind NEEDLIBS
  {
  $(LINK) $(LINKFLAGS) /Fe$(<) $(UNDEFS) $(>) $(NEEDLIBS) $(LINKLIBS) /link /NODEFAULTLIB:LIBC 
  }
}
else if "gcc" in $(CC)
{
  C++FLAGS += -g ;
}
